{"H:\\deviceAssignment\\src\\crud\\uploadToDynamo.ts":{"path":"H:\\deviceAssignment\\src\\crud\\uploadToDynamo.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":33}},"2":{"start":{"line":4,"column":19},"end":{"line":4,"column":38}},"3":{"start":{"line":5,"column":17},"end":{"line":5,"column":53}},"4":{"start":{"line":6,"column":16},"end":{"line":6,"column":18}},"5":{"start":{"line":7,"column":13},"end":{"line":7,"column":15}},"6":{"start":{"line":8,"column":24},"end":{"line":11,"column":1}},"7":{"start":{"line":9,"column":25},"end":{"line":9,"column":40}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":247}},"9":{"start":{"line":12,"column":0},"end":{"line":12,"column":42}},"10":{"start":{"line":13,"column":32},"end":{"line":22,"column":1}},"11":{"start":{"line":13,"column":59},"end":{"line":22,"column":1}},"12":{"start":{"line":14,"column":4},"end":{"line":21,"column":5}},"13":{"start":{"line":15,"column":8},"end":{"line":15,"column":42}},"14":{"start":{"line":16,"column":8},"end":{"line":16,"column":29}},"15":{"start":{"line":19,"column":8},"end":{"line":19,"column":25}},"16":{"start":{"line":20,"column":8},"end":{"line":20,"column":26}},"17":{"start":{"line":23,"column":0},"end":{"line":49,"column":2}},"18":{"start":{"line":23,"column":86},"end":{"line":49,"column":1}},"19":{"start":{"line":24,"column":16},"end":{"line":24,"column":55}},"20":{"start":{"line":25,"column":17},"end":{"line":25,"column":34}},"21":{"start":{"line":26,"column":16},"end":{"line":26,"column":49}},"22":{"start":{"line":27,"column":28},"end":{"line":27,"column":51}},"23":{"start":{"line":28,"column":4},"end":{"line":28,"column":28}},"24":{"start":{"line":29,"column":4},"end":{"line":48,"column":5}},"25":{"start":{"line":30,"column":25},"end":{"line":30,"column":45}},"26":{"start":{"line":31,"column":21},"end":{"line":31,"column":52}},"27":{"start":{"line":32,"column":24},"end":{"line":32,"column":40}},"28":{"start":{"line":33,"column":25},"end":{"line":33,"column":46}},"29":{"start":{"line":34,"column":30},"end":{"line":34,"column":52}},"30":{"start":{"line":35,"column":21},"end":{"line":35,"column":45}},"31":{"start":{"line":36,"column":34},"end":{"line":36,"column":112}},"32":{"start":{"line":37,"column":8},"end":{"line":37,"column":78}},"33":{"start":{"line":38,"column":23},"end":{"line":42,"column":9}},"34":{"start":{"line":43,"column":8},"end":{"line":43,"column":38}},"35":{"start":{"line":44,"column":8},"end":{"line":44,"column":15}},"36":{"start":{"line":47,"column":8},"end":{"line":47,"column":25}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":24},"end":{"line":8,"column":25}},"loc":{"start":{"line":8,"column":54},"end":{"line":11,"column":1}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":13,"column":32},"end":{"line":13,"column":33}},"loc":{"start":{"line":13,"column":59},"end":{"line":22,"column":1}},"line":13},"2":{"name":"(anonymous_2)","decl":{"start":{"line":13,"column":59},"end":{"line":13,"column":60}},"loc":{"start":{"line":13,"column":75},"end":{"line":22,"column":1}},"line":13},"3":{"name":"(anonymous_3)","decl":{"start":{"line":23,"column":18},"end":{"line":23,"column":19}},"loc":{"start":{"line":23,"column":86},"end":{"line":49,"column":1}},"line":23},"4":{"name":"(anonymous_4)","decl":{"start":{"line":23,"column":86},"end":{"line":23,"column":87}},"loc":{"start":{"line":23,"column":103},"end":{"line":49,"column":1}},"line":23}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":2,"8":2,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":0,"16":0,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":0},"f":{"0":2,"1":1,"2":1,"3":1,"4":1},"b":{},"inputSourceMap":{"version":3,"file":"H:/deviceAssignment/src/crud/uploadToDynamo.ts","sources":["H:/deviceAssignment/src/crud/uploadToDynamo.ts"],"names":[],"mappings":";;;AAAA,uCAA0C;AAE1C,sDAAoD;AAEpD,IAAI,SAAS,GAAU,EAAE,CAAA;AACzB,IAAI,MAAM,GAAU,EAAE,CAAA;AAKf,MAAM,eAAe,GAAG,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAoD,EAAU,EAAE;IACpH,MAAM,YAAY,GAAW,MAAM,GAAG,MAAM,CAAA;IAC5C,OAAO,yEAAyE,IAAI,wCAAwC,YAAY,eAAe,MAAM,eAAe,MAAM,gEAAgE,CAAA;AACpP,CAAC,CAAA;AAHY,QAAA,eAAe,mBAG3B;AACD,MAAM,uBAAuB,GAAG,CAAC,EAAE,MAAM,EAAE,SAAS,EAAyC,EAAE,EAAE,CAAC,KAAK,EAAE,IAAS,EAAE,EAAE;IACpH,IAAI;QACF,MAAM,MAAM,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,CAAA;QACjC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;KACrB;IACD,OAAO,GAAG,EAAE;QACV,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;QAChB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;KAClB;AACH,CAAC,CAAA;AAED,kBAAe,CAAC,EAAE,SAAS,EAAE,sBAAsB,EAAE,eAAe,EAAE,MAAM,EAAwH,EAAE,EAAE,CAAC,KAAK,EAAC,KAAK,EAAC,EAAE;IACrN,MAAM,GAAG,GAAG,IAAA,gBAAY,EAAC,gBAAgB,CAAC,CAAA;IAC1C,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;IAC9B,MAAM,GAAG,GAAG,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,MAAM,EAAE,GAAG,CAAA;IAC7C,MAAM,eAAe,GAAW,MAAM,EAAE,QAAQ,EAAE,KAAK,CAAA;IACvD,GAAG,CAAC,kBAAkB,CAAC,CAAA;IACvB,IAAI;QACF,MAAM,QAAQ,GAAG,MAAM,SAAS,CAAC,GAAG,CAAC,CAAA;QACrC,MAAM,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAA;QAC5C,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;QAChC,MAAM,QAAQ,GAAW,MAAM,EAAE,GAAG,EAAE,QAAQ,CAAA;QAC9C,MAAM,aAAa,GAAW,sBAAsB,CAAA;QACpD,MAAM,IAAI,GAAW,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAA;QAC7C,MAAM,iBAAiB,GAAG,uBAAuB,CAAC,EAAE,MAAM,EAAE,aAAa,EAAE,SAAS,EAAE,eAAe,EAAE,CAAC,CAAA;QACxG,MAAM,IAAA,cAAQ,EAAC,OAAO,EAAE,OAAO,CAAC,MAAM,EAAE,iBAAiB,CAAC,CAAA;QAC1D,MAAM,MAAM,GAAG;YACb,OAAO,EAAE,IAAA,uBAAe,EAAC,EAAE,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,MAAM,EAAE,SAAS,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;YACzF,OAAO,EAAE,6BAA6B;YACtC,QAAQ,EAAE,QAAQ;SACnB,CAAA;QACD,MAAM,eAAe,CAAC,MAAM,CAAC,CAAA;QAC7B,OAAM;KACP;IAAC,OAAO,CAAC,EAAE;QACV,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;KACjB;AACH,CAAC,CAAA","sourcesContent":["import { map as mapAwait } from 'awaiting'\nimport { type Config } from '../config'\nimport createLogger from '../dependency/util/logger'\n\nlet completed: any[] = []\nlet failed: any[] = []\n\ninterface Client {\n  put: (tableName: string, data: any) => {}\n}\nexport const generateMessage = ({ failed, passed, time }: { failed: number, passed: number, time: string }): string => {\n  const totalRecords: number = failed + passed\n  return `---------------- SUMMARY --------------------\\nExecution completed at ${time}\\nTotal number of records processed: ${totalRecords}\\nAccepted: ${passed}\\nRejected: ${failed}\\n\\n\\n--------------------------------------------------------`\n}\nconst createPutDeviceToDynamo = ({ client, tableName }: { client: Client, tableName: string }) => async (data: any) => {\n  try {\n    await client.put(tableName, data)\n    completed.push(data)\n  }\n  catch (err) {\n    console.log(err)\n    failed.push(data)\n  }\n}\n\nexport default ({ getFromS3, createAWSStorageClient, createSendEmail, config }: { getFromS3: (key: string) => any, createAWSStorageClient: Client, config: Config, createSendEmail: (params) => {} }) => async input => {\n  const log = createLogger('uploadToDynamo')\n  const data = JSON.parse(input)\n  const key = data?.Records[0]?.s3?.object?.key\n  const dynamoTableName: string = config?.dynamodb?.table\n  log('Running pipeline')\n  try {\n    const response = await getFromS3(key)\n    const data = response.Body.toString('utf-8')\n    const payload = JSON.parse(data)\n    const topicArn: string = config?.sns?.topicArn\n    const storageClient: Client = createAWSStorageClient\n    const date: string = new Date().toUTCString()\n    const putDeviceToDynamo = createPutDeviceToDynamo({ client: storageClient, tableName: dynamoTableName })\n    await mapAwait(payload, payload.length, putDeviceToDynamo)\n    const params = {\n      Message: generateMessage({ failed: failed.length, passed: completed.length, time: date }),\n      Subject: \"Devices upload successfully\",\n      TopicArn: topicArn\n    }\n    await createSendEmail(params)\n    return\n  } catch (e) {\n    console.error(e)\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"eeabe2f4e47a8503538805ff01bb4f0f4ca38f6b","contentHash":"4633b9a306a920617d708492e6a953f4010a44249350bfd8cf75a2b7b17ec961"},"H:\\deviceAssignment\\src\\dependency\\util\\logger.ts":{"path":"H:\\deviceAssignment\\src\\dependency\\util\\logger.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":16},"end":{"line":3,"column":32}},"2":{"start":{"line":4,"column":23},"end":{"line":4,"column":55}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":89}},"4":{"start":{"line":5,"column":31},"end":{"line":5,"column":88}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":18},"end":{"line":5,"column":19}},"loc":{"start":{"line":5,"column":31},"end":{"line":5,"column":88}},"line":5}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1},"f":{"0":1},"b":{},"inputSourceMap":{"version":3,"file":"H:/deviceAssignment/src/dependency/util/logger.ts","sources":["H:/deviceAssignment/src/dependency/util/logger.ts"],"names":[],"mappings":";;AAAA,iCAAyB;AACzB,wDAA+D;AAE/D,kBAAe,CAAC,OAAe,EAAE,EAAE,CAAC,IAAA,eAAK,EAAC,GAAG,mBAAe,IAAI,OAAO,EAAE,CAAC,CAAA","sourcesContent":["import debug from 'debug'\nimport { name as applicationName } from '../../../package.json'\n\nexport default (logName: string) => debug(`${applicationName}:${logName}`)\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f97d33c6fd792a0bc740a1513d61d7080323c1f8","contentHash":"1d7a7d882c99528d6181384952abfd785cb89f2fa2f198ddd0e3b57499cb31a7"}}