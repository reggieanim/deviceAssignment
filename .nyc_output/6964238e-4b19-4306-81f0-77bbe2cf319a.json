{"H:\\deviceAssignment\\src\\dependency\\index.ts":{"path":"H:\\deviceAssignment\\src\\dependency\\index.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":17},"end":{"line":3,"column":34}},"2":{"start":{"line":4,"column":17},"end":{"line":4,"column":34}},"3":{"start":{"line":5,"column":17},"end":{"line":5,"column":37}},"4":{"start":{"line":6,"column":19},"end":{"line":6,"column":52}},"5":{"start":{"line":7,"column":13},"end":{"line":7,"column":40}},"6":{"start":{"line":8,"column":14},"end":{"line":8,"column":42}},"7":{"start":{"line":9,"column":13},"end":{"line":9,"column":38}},"8":{"start":{"line":10,"column":14},"end":{"line":10,"column":40}},"9":{"start":{"line":11,"column":17},"end":{"line":11,"column":46}},"10":{"start":{"line":12,"column":25},"end":{"line":12,"column":58}},"11":{"start":{"line":13,"column":53},"end":{"line":17,"column":1}},"12":{"start":{"line":14,"column":20},"end":{"line":14,"column":172}},"13":{"start":{"line":15,"column":20},"end":{"line":15,"column":172}},"14":{"start":{"line":16,"column":20},"end":{"line":16,"column":53}},"15":{"start":{"line":18,"column":18},"end":{"line":18,"column":49}},"16":{"start":{"line":19,"column":0},"end":{"line":19,"column":69}},"17":{"start":{"line":20,"column":0},"end":{"line":20,"column":78}},"18":{"start":{"line":21,"column":0},"end":{"line":21,"column":76}},"19":{"start":{"line":22,"column":0},"end":{"line":22,"column":90}},"20":{"start":{"line":23,"column":0},"end":{"line":23,"column":101}},"21":{"start":{"line":24,"column":0},"end":{"line":24,"column":117}},"22":{"start":{"line":25,"column":0},"end":{"line":25,"column":87}},"23":{"start":{"line":26,"column":0},"end":{"line":26,"column":90}},"24":{"start":{"line":27,"column":0},"end":{"line":27,"column":89}},"25":{"start":{"line":28,"column":0},"end":{"line":28,"column":101}},"26":{"start":{"line":29,"column":0},"end":{"line":29,"column":98}},"27":{"start":{"line":30,"column":0},"end":{"line":30,"column":113}},"28":{"start":{"line":31,"column":0},"end":{"line":31,"column":96}},"29":{"start":{"line":32,"column":0},"end":{"line":32,"column":98}},"30":{"start":{"line":33,"column":0},"end":{"line":33,"column":34}},"31":{"start":{"line":33,"column":24},"end":{"line":33,"column":33}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":14,"column":4},"end":{"line":14,"column":5}},"loc":{"start":{"line":14,"column":20},"end":{"line":14,"column":172}},"line":14},"1":{"name":"(anonymous_1)","decl":{"start":{"line":15,"column":4},"end":{"line":15,"column":5}},"loc":{"start":{"line":15,"column":20},"end":{"line":15,"column":172}},"line":15},"2":{"name":"(anonymous_2)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":20},"end":{"line":16,"column":53}},"line":16},"3":{"name":"(anonymous_3)","decl":{"start":{"line":33,"column":18},"end":{"line":33,"column":19}},"loc":{"start":{"line":33,"column":24},"end":{"line":33,"column":33}},"line":33}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":0,"13":0,"14":0,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1},"f":{"0":0,"1":0,"2":0,"3":1},"b":{},"inputSourceMap":{"version":3,"file":"H:/deviceAssignment/src/dependency/index.ts","sources":["H:/deviceAssignment/src/dependency/index.ts"],"names":[],"mappings":";;AAAA,mCAA8E;AAC9E,mCAAyC;AAGzC,sCAA+C;AAG/C,qDAAuF;AACvF,yCAAiD;AACjD,2CAAmD;AAGnD,uCAAoE;AACpE,yCAAmE;AACnE,+CAA2D;AAG3D,2DAAmD;AACnD,MAAM,CAAC,YAAY,EAAE,WAAW,EAAE,eAAe,CAAC,GAAG;IACnD,CAAC,EAAE,MAAM,EAAsB,EAAW,EAAE,CAAC,IAAA,WAAE,EAAC,IAAA,eAAM,EAAC,IAAA,aAAI,EAAC,KAAK,EAAE,MAAM,CAAC,EAAE,YAAY,CAAC,EAAE,IAAA,eAAM,EAAC,IAAA,aAAI,EAAC,KAAK,EAAE,MAAM,CAAC,EAAE,MAAM,CAAC,CAAC;IAC/H,CAAC,EAAE,MAAM,EAAsB,EAAY,EAAE,CAAC,IAAA,WAAE,EAAC,IAAA,eAAM,EAAC,IAAA,aAAI,EAAC,KAAK,EAAE,MAAM,CAAC,EAAE,aAAa,CAAC,EAAE,IAAA,eAAM,EAAC,IAAA,aAAI,EAAC,KAAK,EAAE,MAAM,CAAC,EAAE,KAAK,CAAC,CAAC;IAChI,CAAC,EAAE,MAAM,EAAsB,EAAU,EAAE,CAAC,IAAA,aAAI,EAAC,KAAK,EAAE,MAAM,CAAC;CAChE,CAAA;AAED,MAAM,SAAS,GAAyB,IAAA,wBAAe,GAAE,CAAA;AACzD,SAAS,CAAC,QAAQ,CAAC,QAAQ,EAAE,IAAA,gBAAO,EAAC,eAAM,CAAC,CAAC,CAAA;AAC7C,SAAS,CAAC,QAAQ,CAAC,QAAQ,EAAE,IAAA,mBAAU,EAAC,YAAY,CAAC,CAAC,MAAM,EAAE,CAAC,CAAA;AAC/D,SAAS,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAA,mBAAU,EAAC,WAAW,CAAC,CAAC,MAAM,EAAE,CAAC,CAAA;AAC7D,SAAS,CAAC,QAAQ,CAAC,iBAAiB,EAAE,IAAA,mBAAU,EAAC,eAAe,CAAC,CAAC,MAAM,EAAE,CAAC,CAAA;AAC3E,SAAS,CAAC,QAAQ,CAAC,cAAc,EAAE,IAAA,mBAAU,EAAC,6BAAkB,CAAC,CAAC,MAAM,EAAE,CAAC,CAAA;AAC3E,SAAS,CAAC,QAAQ,CAAC,sBAAsB,EAAE,IAAA,mBAAU,EAAC,qCAA0B,CAAC,CAAC,MAAM,EAAE,CAAC,CAAA;AAC3F,SAAS,CAAC,QAAQ,CAAC,UAAU,EAAE,IAAA,mBAAU,EAAC,mBAAc,CAAC,CAAC,MAAM,EAAE,CAAC,CAAA;AACnE,SAAS,CAAC,QAAQ,CAAC,WAAW,EAAE,IAAA,mBAAU,EAAC,qBAAe,CAAC,CAAC,MAAM,EAAE,CAAC,CAAA;AACrE,SAAS,CAAC,QAAQ,CAAC,WAAW,EAAE,IAAA,mBAAU,EAAC,oBAAe,CAAC,CAAC,MAAM,EAAE,CAAC,CAAA;AACrE,SAAS,CAAC,QAAQ,CAAC,oBAAoB,EAAE,IAAA,mBAAU,EAAC,uBAAkB,CAAC,CAAC,MAAM,EAAE,CAAC,CAAA;AACjF,SAAS,CAAC,QAAQ,CAAC,gBAAgB,EAAE,IAAA,mBAAU,EAAC,wBAAc,CAAC,CAAC,MAAM,EAAE,CAAC,CAAA;AACzE,SAAS,CAAC,QAAQ,CAAC,wBAAwB,EAAE,IAAA,mBAAU,EAAC,+BAAsB,CAAC,CAAC,MAAM,EAAE,CAAC,CAAA;AACzF,SAAS,CAAC,QAAQ,CAAC,iBAAiB,EAAE,IAAA,mBAAU,EAAC,qBAAe,CAAC,CAAC,MAAM,EAAE,CAAC,CAAA;AAC3E,SAAS,CAAC,QAAQ,CAAC,kBAAkB,EAAE,IAAA,mBAAU,EAAC,sBAAgB,CAAC,CAAC,MAAM,EAAE,CAAC,CAAA;AAE7E,kBAAe,GAAyB,EAAE,CAAC,SAAS,CAAA","sourcesContent":["import { asValue, asFunction, createContainer, AwilixContainer } from 'awilix'\nimport { equals, prop, or } from 'rambda'\n\n// conig\nimport { config, type Config } from '../config'\n\n// client\nimport { createDynamoClient, createDynamoDocumentClient } from './util/client/dynamodb'\nimport { createS3Client } from './util/client/s3'\nimport { createSNSClient } from './util/client/sns'\n\n// services\nimport { createPresignedUrl, createGetFromS3 } from 'src/service/s3'\nimport { createSendEmail, createSubscriber } from 'src/service/sns'\nimport { createAWSStorageClient } from 'src/service/dynamo'\n\n// crud\nimport uploadToDynamo from '../crud/uploadToDynamo'\nconst [createIsProd, createIsDev, createIsWhatEnv] = [\n  ({ config }: { config: Config }): boolean => or(equals(prop('env', config), 'production'), equals(prop('env', config), 'prod')),\n  ({ config }: { config: Config }): boolean  => or(equals(prop('env', config), 'development'), equals(prop('env', config), 'dev')),\n  ({ config }: { config: Config }): string => prop('env', config)\n]\n\nconst container: AwilixContainer<any> = createContainer()\ncontainer.register('config', asValue(config))\ncontainer.register('isProd', asFunction(createIsProd).scoped())\ncontainer.register('isDev', asFunction(createIsDev).scoped())\ncontainer.register('createIsWhatEnv', asFunction(createIsWhatEnv).scoped())\ncontainer.register('dynamoClient', asFunction(createDynamoClient).scoped())\ncontainer.register('dynamoDocumentClient', asFunction(createDynamoDocumentClient).scoped())\ncontainer.register('s3Client', asFunction(createS3Client).scoped())\ncontainer.register('snsClient', asFunction(createSNSClient).scoped())\ncontainer.register('getFromS3', asFunction(createGetFromS3).scoped())\ncontainer.register('createPresignedUrl', asFunction(createPresignedUrl).scoped())\ncontainer.register('uploadToDynamo', asFunction(uploadToDynamo).scoped())\ncontainer.register('createAWSStorageClient', asFunction(createAWSStorageClient).scoped())\ncontainer.register('createSendEmail', asFunction(createSendEmail).scoped())\ncontainer.register('createSubscriber', asFunction(createSubscriber).scoped())\n\nexport default (): AwilixContainer<any> => container"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5fd0a9bd583c905e1385984c579d63ea6ed4a59c","contentHash":"601a1f9c475556453d2497d8ba67b6b93492c7a1250f581b344d44e323a3865b"},"H:\\deviceAssignment\\src\\config\\index.ts":{"path":"H:\\deviceAssignment\\src\\config\\index.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":24}},"2":{"start":{"line":4,"column":17},"end":{"line":4,"column":34}},"3":{"start":{"line":5,"column":0},"end":{"line":41,"column":2}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"H:/deviceAssignment/src/config/index.ts","sources":["H:/deviceAssignment/src/config/index.ts"],"names":[],"mappings":";;;AAAA,mCAA+B;AAuClB,QAAA,MAAM,GAAW;IAC5B,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,GAAG;IACpB,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,QAAQ;IAC9B,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK;IACxB,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,OAAO;IAC3B,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,OAAO;IAC5B,QAAQ,EAAE;QACR,cAAc,EAAE,IAAA,eAAM,EAAC,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC;QACpE,IAAI,EAAE;YACJ,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,sBAAsB;YAC5C,WAAW,EAAE,OAAO,CAAC,GAAG,CAAC,2BAA2B;YACpD,eAAe,EAAE,OAAO,CAAC,GAAG,CAAC,+BAA+B;YAC5D,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,oBAAoB;SACzC;QACD,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,mBAAmB;KACvC;IACD,EAAE,EAAE;QACF,IAAI,EAAE;YACJ,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,gBAAgB;YACtC,WAAW,EAAE,OAAO,CAAC,GAAG,CAAC,qBAAqB;YAC9C,eAAe,EAAE,OAAO,CAAC,GAAG,CAAC,yBAAyB;YACtD,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,cAAc;SACnC;QACD,gBAAgB,EAAE,IAAA,eAAM,EAAC,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC;QACjE,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,cAAc;KACnC;IACD,GAAG,EAAE;QACH,IAAI,EAAE;YACJ,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,iBAAiB;YACvC,WAAW,EAAE,OAAO,CAAC,GAAG,CAAC,sBAAsB;YAC/C,eAAe,EAAE,OAAO,CAAC,GAAG,CAAC,0BAA0B;YACvD,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,eAAe;SACpC;QACD,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,SAAS;QAC5B,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,aAAa;KACpC;CACF,CAAA","sourcesContent":["import { equals } from 'rambda'\n\ntype AWSPARAMS = {\n    endpoint: string;\n    accessKeyId: string;\n    secretAccessKey: string;\n    region: string;\n}\n\ntype DynamoConfig = {\n  seedingEnabled: boolean;\n  auth: AWSPARAMS\n  table: string;\n}\n\ntype SnsConfig = {\n  auth: AWSPARAMS\n  topic: string;\n  topicArn: string;\n}\n\ntype S3Config = {\n  s3ForcePathStyle: boolean;\n  bucket: string;\n  auth: AWSPARAMS\n}\n\nexport interface Config {\n  env: string;\n  endpoint: string;\n  debug: string;\n  apiKey: string;\n  version: string;\n  dynamodb: DynamoConfig;\n  s3: S3Config;\n  sns: SnsConfig;\n}\n\n// App configuration\nexport const config: Config = {\n  env: process.env.ENV,\n  endpoint: process.env.ENDPOINT,\n  debug: process.env.DEBUG,\n  apiKey: process.env.API_KEY,\n  version: process.env.VERSION,\n  dynamodb: {\n    seedingEnabled: equals('true', process.env.DYNAMODB_SEEDING_ENABLED),\n    auth: {\n      endpoint: process.env.DYNAMODB_AUTH_ENDPOINT,\n      accessKeyId: process.env.DYNAMODB_AUTH_ACCESS_KEY_ID,\n      secretAccessKey: process.env.DYNAMODB_AUTH_SECRET_ACCESS_KEY,\n      region: process.env.DYNAMODB_AUTH_REGION,\n    },\n    table: process.env.DYNAMODB_AUTH_TABLE\n  },\n  s3: {\n    auth: {\n      endpoint: process.env.S3_AUTH_ENDPOINT,\n      accessKeyId: process.env.S3_AUTH_ACCESS_KEY_ID,\n      secretAccessKey: process.env.S3_AUTH_SECRET_ACCESS_KEY,\n      region: process.env.S3_AUTH_REGION\n    },\n    s3ForcePathStyle: equals('true', process.env.S3_FORCE_PATH_STYLE),\n    bucket: process.env.S3_BUCKET_NAME\n  },\n  sns: {\n    auth: {\n      endpoint: process.env.SNS_AUTH_ENDPOINT,\n      accessKeyId: process.env.SNS_AUTH_ACCESS_KEY_ID,\n      secretAccessKey: process.env.SNS_AUTH_SECRET_ACCESS_KEY,\n      region: process.env.SNS_AUTH_REGION\n    },\n    topic: process.env.SNS_TOPIC,\n    topicArn: process.env.SNS_TOPIC_ARN\n  },\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"63c8ddc6137542fcd7ad7ab59776d5d83dbff7e1","contentHash":"74aa5341c690e897a6d8a49db7c22b1901015459fe7f62afddd58cf6fcc732e7"},"H:\\deviceAssignment\\src\\dependency\\util\\client\\dynamodb.ts":{"path":"H:\\deviceAssignment\\src\\dependency\\util\\client\\dynamodb.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":73}},"2":{"start":{"line":4,"column":18},"end":{"line":4,"column":36}},"3":{"start":{"line":5,"column":27},"end":{"line":5,"column":176}},"4":{"start":{"line":5,"column":112},"end":{"line":5,"column":176}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":48}},"6":{"start":{"line":7,"column":35},"end":{"line":11,"column":2}},"7":{"start":{"line":7,"column":120},"end":{"line":11,"column":2}},"8":{"start":{"line":12,"column":0},"end":{"line":12,"column":64}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":27},"end":{"line":5,"column":28}},"loc":{"start":{"line":5,"column":112},"end":{"line":5,"column":176}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":35},"end":{"line":7,"column":36}},"loc":{"start":{"line":7,"column":120},"end":{"line":11,"column":2}},"line":7}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":0,"5":1,"6":1,"7":0,"8":1},"f":{"0":0,"1":0},"b":{},"inputSourceMap":{"version":3,"file":"H:/deviceAssignment/src/dependency/util/client/dynamodb.ts","sources":["H:/deviceAssignment/src/dependency/util/client/dynamodb.ts"],"names":[],"mappings":";;;AAAA,qCAAmC;AAG5B,MAAM,kBAAkB,GAAG,CAAC,EACjC,MAAM,EAAE,EAAE,QAAQ,EAAE,EAAE,IAAI,EAAE,EAAE,WAAW,EAAE,eAAe,EAAE,MAAM,EAAE,GACnE,GACA,GACkB,EAAE,EAAE,CAAC,IAAI,kBAAQ,CAAC,EAAE,WAAW,EAAE,eAAe,EAAE,MAAM,EAAE,CAAC,CAAC;AAJpE,QAAA,kBAAkB,sBAIkD;AAE1E,MAAM,0BAA0B,GAAG,CAAC,EACzC,MAAM,EAAE,EACN,QAAQ,EAAE,EACR,IAAI,EAAE,EAAE,WAAW,EAAE,eAAe,EAAE,MAAM,EAAE,GAC/C,GACF,GACkB,EAA2B,EAAE,CAChD,IAAI,kBAAQ,CAAC,cAAc,CAAC;IAC1B,WAAW;IACX,eAAe;IACf,MAAM;CACP,CAAC,CAAC;AAXQ,QAAA,0BAA0B,8BAWlC","sourcesContent":["import { DynamoDB } from \"aws-sdk\";\nimport { type Config } from \"../../../config\";\n\nexport const createDynamoClient = ({\n  config: { dynamodb: { auth: { accessKeyId, secretAccessKey, region },\n  },\n  },\n}: { config: Config }) => new DynamoDB({ accessKeyId, secretAccessKey, region });\n\nexport const createDynamoDocumentClient = ({\n  config: {\n    dynamodb: {\n      auth: { accessKeyId, secretAccessKey, region },\n    },\n  },\n}: { config: Config }): DynamoDB.DocumentClient =>\n  new DynamoDB.DocumentClient({\n    accessKeyId,\n    secretAccessKey,\n    region,\n  });\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"792a783128ff19ec9affc4aeef4ac4a27f25bdad","contentHash":"8da112fa0beb664e8fa0d790894dd37f54d8b210fafcc089334114482b3384e6"},"H:\\deviceAssignment\\src\\dependency\\util\\client\\s3.ts":{"path":"H:\\deviceAssignment\\src\\dependency\\util\\client\\s3.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":32}},"2":{"start":{"line":4,"column":18},"end":{"line":4,"column":36}},"3":{"start":{"line":5,"column":23},"end":{"line":9,"column":2}},"4":{"start":{"line":5,"column":110},"end":{"line":9,"column":2}},"5":{"start":{"line":10,"column":0},"end":{"line":10,"column":40}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":23},"end":{"line":5,"column":24}},"loc":{"start":{"line":5,"column":110},"end":{"line":9,"column":2}},"line":5}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":0,"5":1},"f":{"0":0},"b":{},"inputSourceMap":{"version":3,"file":"H:/deviceAssignment/src/dependency/util/client/s3.ts","sources":["H:/deviceAssignment/src/dependency/util/client/s3.ts"],"names":[],"mappings":";;;AAAA,qCAA4B;AAGrB,MAAM,cAAc,GAAG,CAAC,EAC3B,MAAM,EAAE,EACJ,EAAE,EAAE,EACA,IAAI,EAAE,EACF,WAAW,EACX,eAAe,EAClB,EACD,gBAAgB,GACnB,EACJ,EACgB,EAAM,EAAE,CAAC,IAAI,YAAE,CAAC;IACjC,WAAW;IACX,eAAe;IACf,gBAAgB;CACnB,CAAC,CAAA;AAdW,QAAA,cAAc,kBAczB","sourcesContent":["import { S3 } from 'aws-sdk'\nimport { type Config } from \"../../../config\";\n\nexport const createS3Client = ({\n    config: {\n        s3: {\n            auth: {\n                accessKeyId,\n                secretAccessKey\n            },\n            s3ForcePathStyle,\n        }\n    }\n}: { config: Config }): S3 => new S3({\n    accessKeyId,\n    secretAccessKey,\n    s3ForcePathStyle,\n})\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c43af885a9683d9f2ccd29675d6c1eb5b3dc348b","contentHash":"ebcaf427cedb4c99a08cec2cce34e0a08f2485ef2d30cbb96881b6e0290403bb"},"H:\\deviceAssignment\\src\\dependency\\util\\client\\sns.ts":{"path":"H:\\deviceAssignment\\src\\dependency\\util\\client\\sns.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":33}},"2":{"start":{"line":4,"column":18},"end":{"line":4,"column":36}},"3":{"start":{"line":5,"column":24},"end":{"line":11,"column":2}},"4":{"start":{"line":5,"column":101},"end":{"line":11,"column":2}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":42}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":24},"end":{"line":5,"column":25}},"loc":{"start":{"line":5,"column":101},"end":{"line":11,"column":2}},"line":5}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":0,"5":1},"f":{"0":0},"b":{},"inputSourceMap":{"version":3,"file":"H:/deviceAssignment/src/dependency/util/client/sns.ts","sources":["H:/deviceAssignment/src/dependency/util/client/sns.ts"],"names":[],"mappings":";;;AAAA,qCAA6B;AAGtB,MAAM,eAAe,GAAG,CAAC,EAC5B,MAAM,EAAE,EACJ,GAAG,EAAE,EACD,IAAI,EAAE,EACF,WAAW,EACX,eAAe,EACf,MAAM,EACT,EACJ,EACJ,EACgB,EAAO,EAAE,CAAC,IAAI,aAAG,CAAC;IACnC,WAAW,EAAE;QACT,WAAW;QACX,eAAe;KAClB;IACD,MAAM;CACT,CAAC,CAAA;AAhBW,QAAA,eAAe,mBAgB1B","sourcesContent":["import { SNS } from 'aws-sdk'\nimport { type Config } from \"../../../config\";\n\nexport const createSNSClient = ({\n    config: {\n        sns: {\n            auth: {\n                accessKeyId,\n                secretAccessKey,\n                region\n            }\n        }\n    }\n}: { config: Config }): SNS => new SNS({\n    credentials: {\n        accessKeyId,\n        secretAccessKey\n    },\n    region\n})\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c30f7365d76a627d6a6d9bb873e346af9ed99d98","contentHash":"d6805ea6217d3141225794fdd7218e2754524947fb3b9970b836b030e0838979"},"H:\\deviceAssignment\\src\\service\\s3.ts":{"path":"H:\\deviceAssignment\\src\\service\\s3.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":82}},"2":{"start":{"line":4,"column":15},"end":{"line":4,"column":30}},"3":{"start":{"line":5,"column":17},"end":{"line":5,"column":34}},"4":{"start":{"line":6,"column":17},"end":{"line":6,"column":53}},"5":{"start":{"line":8,"column":0},"end":{"line":11,"column":62}},"6":{"start":{"line":9,"column":4},"end":{"line":9,"column":35}},"7":{"start":{"line":10,"column":4},"end":{"line":10,"column":35}},"8":{"start":{"line":12,"column":24},"end":{"line":17,"column":1}},"9":{"start":{"line":12,"column":50},"end":{"line":17,"column":1}},"10":{"start":{"line":13,"column":39},"end":{"line":13,"column":45}},"11":{"start":{"line":14,"column":16},"end":{"line":14,"column":47}},"12":{"start":{"line":15,"column":4},"end":{"line":15,"column":43}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":62}},"14":{"start":{"line":18,"column":0},"end":{"line":18,"column":42}},"15":{"start":{"line":19,"column":27},"end":{"line":30,"column":1}},"16":{"start":{"line":19,"column":53},"end":{"line":30,"column":1}},"17":{"start":{"line":20,"column":21},"end":{"line":20,"column":55}},"18":{"start":{"line":21,"column":15},"end":{"line":21,"column":31}},"19":{"start":{"line":22,"column":25},"end":{"line":28,"column":6}},"20":{"start":{"line":29,"column":4},"end":{"line":29,"column":24}},"21":{"start":{"line":31,"column":0},"end":{"line":31,"column":48}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":1},"end":{"line":8,"column":2}},"loc":{"start":{"line":8,"column":22},"end":{"line":11,"column":1}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":12,"column":24},"end":{"line":12,"column":25}},"loc":{"start":{"line":12,"column":50},"end":{"line":17,"column":1}},"line":12},"2":{"name":"(anonymous_2)","decl":{"start":{"line":12,"column":50},"end":{"line":12,"column":51}},"loc":{"start":{"line":12,"column":65},"end":{"line":17,"column":1}},"line":12},"3":{"name":"(anonymous_3)","decl":{"start":{"line":19,"column":27},"end":{"line":19,"column":28}},"loc":{"start":{"line":19,"column":53},"end":{"line":30,"column":1}},"line":19},"4":{"name":"(anonymous_4)","decl":{"start":{"line":19,"column":53},"end":{"line":19,"column":54}},"loc":{"start":{"line":19,"column":80},"end":{"line":30,"column":1}},"line":19}},"branchMap":{"0":{"loc":{"start":{"line":11,"column":15},"end":{"line":11,"column":60}},"type":"binary-expr","locations":[{"start":{"line":11,"column":15},"end":{"line":11,"column":32}},{"start":{"line":11,"column":37},"end":{"line":11,"column":59}}],"line":11}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1},"f":{"0":1,"1":0,"2":0,"3":0,"4":0},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"file":"H:/deviceAssignment/src/service/s3.ts","sources":["H:/deviceAssignment/src/service/s3.ts"],"names":[],"mappings":";;;AACA,+BAAmC;AACnC,mCAA8C;AAE9C,sDAAoD;AAcpD,IAAY,SAGX;AAHD,WAAY,SAAS;IACnB,8BAAiB,CAAA;IACjB,8BAAiB,CAAA;AACnB,CAAC,EAHW,SAAS,GAAT,iBAAS,KAAT,iBAAS,QAGpB;AAGM,MAAM,eAAe,GAAG,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAoC,EAAE,EAAE,CAAC,KAAK,EAAE,GAAW,EAA+B,EAAE;IAC5I,MAAM,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,EAAE,GAAG,MAAM,CAAA;IACzC,MAAM,GAAG,GAAG,IAAA,gBAAY,EAAC,QAAQ,CAAC,CAAA;IAClC,GAAG,CAAC,4BAA4B,EAAE,GAAG,CAAC,CAAA;IACtC,OAAO,QAAQ,CAAC,SAAS,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,OAAO,EAAE,CAAA;AAC3D,CAAC,CAAA;AALY,QAAA,eAAe,mBAK3B;AAEM,MAAM,kBAAkB,GAAG,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAoC,EAAE,EAAE,CAAC,KAAK,EAAE,MAAiB,EAAE,OAAgB,EAAmB,EAAE;IAC3J,MAAM,QAAQ,GAAG,IAAA,aAAI,EAAC,KAAK,EAAE,OAAO,CAAC,CAAA;IACrC,MAAM,EAAE,GAAW,IAAA,SAAM,GAAE,CAAA;IAC3B,MAAM,YAAY,GAAW,MAAM,QAAQ,CAAC,YAAY,CAAC,MAAM,EAAE;QAC/D,MAAM,EAAE,IAAA,aAAI,EAAC,CAAC,IAAI,EAAE,QAAQ,CAAC,EAAE,MAAM,CAAC;QACtC,GAAG,EAAE,GAAG,QAAQ,IAAI,EAAE,OAAO;QAC7B,OAAO,EAAE,IAAA,kBAAS,EAAC,GAAG,CAAC,CAAC,IAAA,aAAI,EAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QACjD,WAAW,EAAE,kBAAkB;QAC/B,QAAQ,EAAE,OAAO,CAAC,QAAQ;KAC3B,CAAC,CAAA;IAEF,OAAO,YAAY,CAAA;AACrB,CAAC,CAAA;AAZY,QAAA,kBAAkB,sBAY9B","sourcesContent":["import { type S3 } from 'aws-sdk'\nimport { v4 as uuidv4 } from 'uuid'\nimport { defaultTo, prop, path } from 'rambda'\nimport { type Config } from '../config'\nimport createLogger from '../dependency/util/logger'\n\nexport type UrlBody = {\n  Bucket?: string;\n  Key: string;\n  Expires?: number;\n  Metadata?: Metadata;\n}\n\ntype Metadata = {\n  filename: string;\n  notification: any;\n}\n\nexport enum UrlMethod {\n  put = 'putObject',\n  get = 'getObject'\n}\n\n\nexport const createGetFromS3 = ({ s3Client, config }: { s3Client: S3, config: Config }) => async (key: string): Promise<S3.GetObjectOutput> => {\n  const { s3: { bucket: Bucket } } = config\n  const log = createLogger('S3:get')\n  log('Getting item from s3 using', key)\n  return s3Client.getObject({ Bucket, Key: key }).promise()\n}\n\nexport const createPresignedUrl = ({ s3Client, config }: { s3Client: S3, config: Config }) => async (method: UrlMethod, payload: UrlBody): Promise<string> => {\n  const filename = prop('Key', payload)\n  const id: string = uuidv4()\n  const presignedURL: string = await s3Client.getSignedUrl(method, {\n    Bucket: path(['s3', 'bucket'], config),\n    Key: `${filename}_${id}.json`, //filename\n    Expires: defaultTo(100)(prop('Expires', payload)),\n    ContentType: 'application/json',\n    Metadata: payload.Metadata\n  })\n\n  return presignedURL\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b081aab8988bbd5a46072b6400eb8a90043fbc5b","contentHash":"f4d2a49ca95f4876a7a463d44df3a71643f06f68e0d2a65d7810e2d4ace48e9b"},"H:\\deviceAssignment\\src\\dependency\\util\\logger.ts":{"path":"H:\\deviceAssignment\\src\\dependency\\util\\logger.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":16},"end":{"line":3,"column":32}},"2":{"start":{"line":4,"column":23},"end":{"line":4,"column":55}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":89}},"4":{"start":{"line":5,"column":31},"end":{"line":5,"column":88}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":18},"end":{"line":5,"column":19}},"loc":{"start":{"line":5,"column":31},"end":{"line":5,"column":88}},"line":5}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":0},"f":{"0":0},"b":{},"inputSourceMap":{"version":3,"file":"H:/deviceAssignment/src/dependency/util/logger.ts","sources":["H:/deviceAssignment/src/dependency/util/logger.ts"],"names":[],"mappings":";;AAAA,iCAAyB;AACzB,wDAA+D;AAE/D,kBAAe,CAAC,OAAe,EAAE,EAAE,CAAC,IAAA,eAAK,EAAC,GAAG,mBAAe,IAAI,OAAO,EAAE,CAAC,CAAA","sourcesContent":["import debug from 'debug'\nimport { name as applicationName } from '../../../package.json'\n\nexport default (logName: string) => debug(`${applicationName}:${logName}`)\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f97d33c6fd792a0bc740a1513d61d7080323c1f8","contentHash":"1d7a7d882c99528d6181384952abfd785cb89f2fa2f198ddd0e3b57499cb31a7"},"H:\\deviceAssignment\\src\\service\\sns.ts":{"path":"H:\\deviceAssignment\\src\\service\\sns.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":60}},"2":{"start":{"line":4,"column":17},"end":{"line":4,"column":53}},"3":{"start":{"line":5,"column":24},"end":{"line":9,"column":1}},"4":{"start":{"line":5,"column":43},"end":{"line":9,"column":1}},"5":{"start":{"line":6,"column":16},"end":{"line":6,"column":54}},"6":{"start":{"line":7,"column":4},"end":{"line":7,"column":48}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":47}},"8":{"start":{"line":10,"column":0},"end":{"line":10,"column":42}},"9":{"start":{"line":11,"column":25},"end":{"line":15,"column":1}},"10":{"start":{"line":11,"column":44},"end":{"line":15,"column":1}},"11":{"start":{"line":12,"column":16},"end":{"line":12,"column":54}},"12":{"start":{"line":13,"column":4},"end":{"line":13,"column":48}},"13":{"start":{"line":14,"column":4},"end":{"line":14,"column":49}},"14":{"start":{"line":16,"column":0},"end":{"line":16,"column":44}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":24},"end":{"line":5,"column":25}},"loc":{"start":{"line":5,"column":43},"end":{"line":9,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":5,"column":43},"end":{"line":5,"column":44}},"loc":{"start":{"line":5,"column":61},"end":{"line":9,"column":1}},"line":5},"2":{"name":"(anonymous_2)","decl":{"start":{"line":11,"column":25},"end":{"line":11,"column":26}},"loc":{"start":{"line":11,"column":44},"end":{"line":15,"column":1}},"line":11},"3":{"name":"(anonymous_3)","decl":{"start":{"line":11,"column":44},"end":{"line":11,"column":45}},"loc":{"start":{"line":11,"column":62},"end":{"line":15,"column":1}},"line":11}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":1},"f":{"0":0,"1":0,"2":0,"3":0},"b":{},"inputSourceMap":{"version":3,"file":"H:/deviceAssignment/src/service/sns.ts","sources":["H:/deviceAssignment/src/service/sns.ts"],"names":[],"mappings":";;;AAEA,sDAAoD;AAE7C,MAAM,eAAe,GAAG,CAAC,EAAE,SAAS,EAAsB,EAAE,EAAE,CAAC,KAAK,EAAE,MAA8B,EAAgC,EAAE;IACzI,MAAM,GAAG,GAAG,IAAA,gBAAY,EAAC,eAAe,CAAC,CAAA;IACzC,GAAG,CAAC,8BAA8B,EAAE,MAAM,CAAC,CAAA;IAC3C,OAAO,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,CAAA;AAC5C,CAAC,CAAA;AAJU,QAAA,eAAe,mBAIzB;AAEM,MAAM,gBAAgB,GAAG,CAAC,EAAE,SAAS,EAAsB,EAAE,EAAE,CAAC,KAAK,EAAE,MAAgC,EAAkC,EAAE;IAChJ,MAAM,GAAG,GAAG,IAAA,gBAAY,EAAC,eAAe,CAAC,CAAA;IACzC,GAAG,CAAC,8BAA8B,EAAE,MAAM,CAAC,CAAA;IAC3C,OAAO,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,CAAA;AAC9C,CAAC,CAAA;AAJY,QAAA,gBAAgB,oBAI5B","sourcesContent":["\nimport { type SNS } from 'aws-sdk'\nimport createLogger from '../dependency/util/logger'\n\nexport const createSendEmail = ({ snsClient }: { snsClient: SNS }) => async (params: SNS.Types.PublishInput): Promise<SNS.PublishResponse> => {\n    const log = createLogger('SNS:sendemail')\n    log('Sending Email with SNS with ', params)\n    return snsClient.publish(params).promise()\n  }\n\n  export const createSubscriber = ({ snsClient }: { snsClient: SNS }) => async (params: SNS.Types.SubscribeInput): Promise<SNS.SubscribeResponse> => {\n    const log = createLogger('SNS:sendemail')\n    log('Sending Email with SNS with ', params)\n    return snsClient.subscribe(params).promise()\n  }\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d907b96ed26ed4f6791bc0b7ed5b16db23b55228","contentHash":"090417abb042b37b260ec623b9ab5971d5b171cb14e9427429dea54209470e6c"},"H:\\deviceAssignment\\src\\service\\dynamo.ts":{"path":"H:\\deviceAssignment\\src\\service\\dynamo.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":40}},"2":{"start":{"line":4,"column":24},"end":{"line":13,"column":1}},"3":{"start":{"line":4,"column":54},"end":{"line":13,"column":1}},"4":{"start":{"line":5,"column":4},"end":{"line":11,"column":19}},"5":{"start":{"line":12,"column":4},"end":{"line":12,"column":16}},"6":{"start":{"line":14,"column":31},"end":{"line":14,"column":113}},"7":{"start":{"line":14,"column":62},"end":{"line":14,"column":112}},"8":{"start":{"line":15,"column":0},"end":{"line":15,"column":56}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":24},"end":{"line":4,"column":25}},"loc":{"start":{"line":4,"column":54},"end":{"line":13,"column":1}},"line":4},"1":{"name":"(anonymous_1)","decl":{"start":{"line":4,"column":54},"end":{"line":4,"column":55}},"loc":{"start":{"line":4,"column":81},"end":{"line":13,"column":1}},"line":4},"2":{"name":"(anonymous_2)","decl":{"start":{"line":14,"column":31},"end":{"line":14,"column":32}},"loc":{"start":{"line":14,"column":62},"end":{"line":14,"column":112}},"line":14}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":0,"4":0,"5":0,"6":1,"7":0,"8":1},"f":{"0":0,"1":0,"2":0},"b":{},"inputSourceMap":{"version":3,"file":"H:/deviceAssignment/src/service/dynamo.ts","sources":["H:/deviceAssignment/src/service/dynamo.ts"],"names":[],"mappings":";;;AAEA,MAAM,eAAe,GAAG,CAAC,EACrB,oBAAoB,EAC4B,EAAE,EAAE,CAAC,KAAK,EAAE,SAAiB,EAAE,IAAS,EAAE,EAAE;IAC5F,MAAM,oBAAoB;SACrB,GAAG,CAAC;QACD,sBAAsB,EAAE,OAAO;QAC/B,SAAS,EAAE,SAAS;QACpB,IAAI,EAAE,IAAI;KACb,CAAC;SACD,OAAO,EAAE,CAAA;IACd,OAAO,IAAI,CAAA;AACf,CAAC,CAAA;AAEM,MAAM,sBAAsB,GAAG,CAAC,EACnC,oBAAoB,EACyB,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,eAAe,CAAC,EAAE,oBAAoB,EAAE,CAAC,EAAE,CAAC,CAAA;AAF7F,QAAA,sBAAsB,0BAEuE","sourcesContent":["import { type DynamoDB } from \"aws-sdk\"\n\nconst createPutAction = ({\n    dynamoDocumentClient\n}: { dynamoDocumentClient: DynamoDB.DocumentClient }) => async (tableName: string, data: any) => {\n    await dynamoDocumentClient\n        .put({\n            ReturnConsumedCapacity: 'TOTAL',\n            TableName: tableName,\n            Item: data\n        })\n        .promise()\n    return data\n}\n\nexport const createAWSStorageClient = ({\n    dynamoDocumentClient\n}: {dynamoDocumentClient:DynamoDB.DocumentClient}) => ({ put: createPutAction({ dynamoDocumentClient }) })\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"df721a3a3538cc81396c87addc5d00c1e3769f7c","contentHash":"728356ee9ca808972bead82a56931ec7840955d054d032873ad710d8b541b033"},"H:\\deviceAssignment\\src\\crud\\uploadToDynamo.ts":{"path":"H:\\deviceAssignment\\src\\crud\\uploadToDynamo.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":33}},"2":{"start":{"line":4,"column":19},"end":{"line":4,"column":38}},"3":{"start":{"line":5,"column":17},"end":{"line":5,"column":53}},"4":{"start":{"line":6,"column":16},"end":{"line":6,"column":18}},"5":{"start":{"line":7,"column":13},"end":{"line":7,"column":15}},"6":{"start":{"line":8,"column":24},"end":{"line":11,"column":1}},"7":{"start":{"line":9,"column":25},"end":{"line":9,"column":40}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":247}},"9":{"start":{"line":12,"column":0},"end":{"line":12,"column":42}},"10":{"start":{"line":13,"column":32},"end":{"line":22,"column":1}},"11":{"start":{"line":13,"column":59},"end":{"line":22,"column":1}},"12":{"start":{"line":14,"column":4},"end":{"line":21,"column":5}},"13":{"start":{"line":15,"column":8},"end":{"line":15,"column":42}},"14":{"start":{"line":16,"column":8},"end":{"line":16,"column":29}},"15":{"start":{"line":19,"column":8},"end":{"line":19,"column":25}},"16":{"start":{"line":20,"column":8},"end":{"line":20,"column":26}},"17":{"start":{"line":23,"column":0},"end":{"line":49,"column":2}},"18":{"start":{"line":23,"column":86},"end":{"line":49,"column":1}},"19":{"start":{"line":24,"column":16},"end":{"line":24,"column":55}},"20":{"start":{"line":25,"column":17},"end":{"line":25,"column":34}},"21":{"start":{"line":26,"column":16},"end":{"line":26,"column":49}},"22":{"start":{"line":27,"column":28},"end":{"line":27,"column":51}},"23":{"start":{"line":28,"column":4},"end":{"line":28,"column":28}},"24":{"start":{"line":29,"column":4},"end":{"line":48,"column":5}},"25":{"start":{"line":30,"column":25},"end":{"line":30,"column":45}},"26":{"start":{"line":31,"column":21},"end":{"line":31,"column":52}},"27":{"start":{"line":32,"column":24},"end":{"line":32,"column":40}},"28":{"start":{"line":33,"column":25},"end":{"line":33,"column":46}},"29":{"start":{"line":34,"column":30},"end":{"line":34,"column":52}},"30":{"start":{"line":35,"column":21},"end":{"line":35,"column":45}},"31":{"start":{"line":36,"column":34},"end":{"line":36,"column":112}},"32":{"start":{"line":37,"column":8},"end":{"line":37,"column":78}},"33":{"start":{"line":38,"column":23},"end":{"line":42,"column":9}},"34":{"start":{"line":43,"column":8},"end":{"line":43,"column":38}},"35":{"start":{"line":44,"column":8},"end":{"line":44,"column":15}},"36":{"start":{"line":47,"column":8},"end":{"line":47,"column":25}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":24},"end":{"line":8,"column":25}},"loc":{"start":{"line":8,"column":54},"end":{"line":11,"column":1}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":13,"column":32},"end":{"line":13,"column":33}},"loc":{"start":{"line":13,"column":59},"end":{"line":22,"column":1}},"line":13},"2":{"name":"(anonymous_2)","decl":{"start":{"line":13,"column":59},"end":{"line":13,"column":60}},"loc":{"start":{"line":13,"column":75},"end":{"line":22,"column":1}},"line":13},"3":{"name":"(anonymous_3)","decl":{"start":{"line":23,"column":18},"end":{"line":23,"column":19}},"loc":{"start":{"line":23,"column":86},"end":{"line":49,"column":1}},"line":23},"4":{"name":"(anonymous_4)","decl":{"start":{"line":23,"column":86},"end":{"line":23,"column":87}},"loc":{"start":{"line":23,"column":103},"end":{"line":49,"column":1}},"line":23}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0},"b":{},"inputSourceMap":{"version":3,"file":"H:/deviceAssignment/src/crud/uploadToDynamo.ts","sources":["H:/deviceAssignment/src/crud/uploadToDynamo.ts"],"names":[],"mappings":";;;AAAA,uCAA0C;AAE1C,sDAAoD;AAEpD,IAAI,SAAS,GAAU,EAAE,CAAA;AACzB,IAAI,MAAM,GAAU,EAAE,CAAA;AAKf,MAAM,eAAe,GAAG,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAoD,EAAU,EAAE;IACpH,MAAM,YAAY,GAAW,MAAM,GAAG,MAAM,CAAA;IAC5C,OAAO,yEAAyE,IAAI,wCAAwC,YAAY,eAAe,MAAM,eAAe,MAAM,gEAAgE,CAAA;AACpP,CAAC,CAAA;AAHY,QAAA,eAAe,mBAG3B;AACD,MAAM,uBAAuB,GAAG,CAAC,EAAE,MAAM,EAAE,SAAS,EAAyC,EAAE,EAAE,CAAC,KAAK,EAAE,IAAS,EAAE,EAAE;IACpH,IAAI;QACF,MAAM,MAAM,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,CAAA;QACjC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;KACrB;IACD,OAAO,GAAG,EAAE;QACV,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;QAChB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;KAClB;AACH,CAAC,CAAA;AAED,kBAAe,CAAC,EAAE,SAAS,EAAE,sBAAsB,EAAE,eAAe,EAAE,MAAM,EAAwH,EAAE,EAAE,CAAC,KAAK,EAAC,KAAK,EAAC,EAAE;IACrN,MAAM,GAAG,GAAG,IAAA,gBAAY,EAAC,gBAAgB,CAAC,CAAA;IAC1C,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;IAC9B,MAAM,GAAG,GAAG,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,MAAM,EAAE,GAAG,CAAA;IAC7C,MAAM,eAAe,GAAW,MAAM,EAAE,QAAQ,EAAE,KAAK,CAAA;IACvD,GAAG,CAAC,kBAAkB,CAAC,CAAA;IACvB,IAAI;QACF,MAAM,QAAQ,GAAG,MAAM,SAAS,CAAC,GAAG,CAAC,CAAA;QACrC,MAAM,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAA;QAC5C,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;QAChC,MAAM,QAAQ,GAAW,MAAM,EAAE,GAAG,EAAE,QAAQ,CAAA;QAC9C,MAAM,aAAa,GAAW,sBAAsB,CAAA;QACpD,MAAM,IAAI,GAAW,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAA;QAC7C,MAAM,iBAAiB,GAAG,uBAAuB,CAAC,EAAE,MAAM,EAAE,aAAa,EAAE,SAAS,EAAE,eAAe,EAAE,CAAC,CAAA;QACxG,MAAM,IAAA,cAAQ,EAAC,OAAO,EAAE,OAAO,CAAC,MAAM,EAAE,iBAAiB,CAAC,CAAA;QAC1D,MAAM,MAAM,GAAG;YACb,OAAO,EAAE,IAAA,uBAAe,EAAC,EAAE,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,MAAM,EAAE,SAAS,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;YACzF,OAAO,EAAE,6BAA6B;YACtC,QAAQ,EAAE,QAAQ;SACnB,CAAA;QACD,MAAM,eAAe,CAAC,MAAM,CAAC,CAAA;QAC7B,OAAM;KACP;IAAC,OAAO,CAAC,EAAE;QACV,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;KACjB;AACH,CAAC,CAAA","sourcesContent":["import { map as mapAwait } from 'awaiting'\nimport { type Config } from '../config'\nimport createLogger from '../dependency/util/logger'\n\nlet completed: any[] = []\nlet failed: any[] = []\n\ninterface Client {\n  put: (tableName: string, data: any) => {}\n}\nexport const generateMessage = ({ failed, passed, time }: { failed: number, passed: number, time: string }): string => {\n  const totalRecords: number = failed + passed\n  return `---------------- SUMMARY --------------------\\nExecution completed at ${time}\\nTotal number of records processed: ${totalRecords}\\nAccepted: ${passed}\\nRejected: ${failed}\\n\\n\\n--------------------------------------------------------`\n}\nconst createPutDeviceToDynamo = ({ client, tableName }: { client: Client, tableName: string }) => async (data: any) => {\n  try {\n    await client.put(tableName, data)\n    completed.push(data)\n  }\n  catch (err) {\n    console.log(err)\n    failed.push(data)\n  }\n}\n\nexport default ({ getFromS3, createAWSStorageClient, createSendEmail, config }: { getFromS3: (key: string) => any, createAWSStorageClient: Client, config: Config, createSendEmail: (params) => {} }) => async input => {\n  const log = createLogger('uploadToDynamo')\n  const data = JSON.parse(input)\n  const key = data?.Records[0]?.s3?.object?.key\n  const dynamoTableName: string = config?.dynamodb?.table\n  log('Running pipeline')\n  try {\n    const response = await getFromS3(key)\n    const data = response.Body.toString('utf-8')\n    const payload = JSON.parse(data)\n    const topicArn: string = config?.sns?.topicArn\n    const storageClient: Client = createAWSStorageClient\n    const date: string = new Date().toUTCString()\n    const putDeviceToDynamo = createPutDeviceToDynamo({ client: storageClient, tableName: dynamoTableName })\n    await mapAwait(payload, payload.length, putDeviceToDynamo)\n    const params = {\n      Message: generateMessage({ failed: failed.length, passed: completed.length, time: date }),\n      Subject: \"Devices upload successfully\",\n      TopicArn: topicArn\n    }\n    await createSendEmail(params)\n    return\n  } catch (e) {\n    console.error(e)\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"eeabe2f4e47a8503538805ff01bb4f0f4ca38f6b","contentHash":"4633b9a306a920617d708492e6a953f4010a44249350bfd8cf75a2b7b17ec961"}}