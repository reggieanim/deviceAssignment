{"H:\\deviceAssignment\\src\\config\\index.ts":{"path":"H:\\deviceAssignment\\src\\config\\index.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":24}},"2":{"start":{"line":4,"column":17},"end":{"line":4,"column":34}},"3":{"start":{"line":5,"column":0},"end":{"line":41,"column":2}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"H:/deviceAssignment/src/config/index.ts","sources":["H:/deviceAssignment/src/config/index.ts"],"names":[],"mappings":";;;AAAA,mCAA+B;AAuClB,QAAA,MAAM,GAAW;IAC5B,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,GAAG;IACpB,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,QAAQ;IAC9B,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK;IACxB,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,OAAO;IAC3B,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,OAAO;IAC5B,QAAQ,EAAE;QACR,cAAc,EAAE,IAAA,eAAM,EAAC,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC;QACpE,IAAI,EAAE;YACJ,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,sBAAsB;YAC5C,WAAW,EAAE,OAAO,CAAC,GAAG,CAAC,2BAA2B;YACpD,eAAe,EAAE,OAAO,CAAC,GAAG,CAAC,+BAA+B;YAC5D,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,oBAAoB;SACzC;QACD,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,mBAAmB;KACvC;IACD,EAAE,EAAE;QACF,IAAI,EAAE;YACJ,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,gBAAgB;YACtC,WAAW,EAAE,OAAO,CAAC,GAAG,CAAC,qBAAqB;YAC9C,eAAe,EAAE,OAAO,CAAC,GAAG,CAAC,yBAAyB;YACtD,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,cAAc;SACnC;QACD,gBAAgB,EAAE,IAAA,eAAM,EAAC,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC;QACjE,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,cAAc;KACnC;IACD,GAAG,EAAE;QACH,IAAI,EAAE;YACJ,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,iBAAiB;YACvC,WAAW,EAAE,OAAO,CAAC,GAAG,CAAC,sBAAsB;YAC/C,eAAe,EAAE,OAAO,CAAC,GAAG,CAAC,0BAA0B;YACvD,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,eAAe;SACpC;QACD,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,SAAS;QAC5B,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,aAAa;KACpC;CACF,CAAA","sourcesContent":["import { equals } from 'rambda'\n\ntype AWSPARAMS = {\n    endpoint: string;\n    accessKeyId: string;\n    secretAccessKey: string;\n    region: string;\n}\n\ntype DynamoConfig = {\n  seedingEnabled: boolean;\n  auth: AWSPARAMS\n  table: string;\n}\n\ntype SnsConfig = {\n  auth: AWSPARAMS\n  topic: string;\n  topicArn: string;\n}\n\ntype S3Config = {\n  s3ForcePathStyle: boolean;\n  bucket: string;\n  auth: AWSPARAMS\n}\n\nexport interface Config {\n  env: string;\n  endpoint: string;\n  debug: string;\n  apiKey: string;\n  version: string;\n  dynamodb: DynamoConfig;\n  s3: S3Config;\n  sns: SnsConfig;\n}\n\n// App configuration\nexport const config: Config = {\n  env: process.env.ENV,\n  endpoint: process.env.ENDPOINT,\n  debug: process.env.DEBUG,\n  apiKey: process.env.API_KEY,\n  version: process.env.VERSION,\n  dynamodb: {\n    seedingEnabled: equals('true', process.env.DYNAMODB_SEEDING_ENABLED),\n    auth: {\n      endpoint: process.env.DYNAMODB_AUTH_ENDPOINT,\n      accessKeyId: process.env.DYNAMODB_AUTH_ACCESS_KEY_ID,\n      secretAccessKey: process.env.DYNAMODB_AUTH_SECRET_ACCESS_KEY,\n      region: process.env.DYNAMODB_AUTH_REGION,\n    },\n    table: process.env.DYNAMODB_AUTH_TABLE\n  },\n  s3: {\n    auth: {\n      endpoint: process.env.S3_AUTH_ENDPOINT,\n      accessKeyId: process.env.S3_AUTH_ACCESS_KEY_ID,\n      secretAccessKey: process.env.S3_AUTH_SECRET_ACCESS_KEY,\n      region: process.env.S3_AUTH_REGION\n    },\n    s3ForcePathStyle: equals('true', process.env.S3_FORCE_PATH_STYLE),\n    bucket: process.env.S3_BUCKET_NAME\n  },\n  sns: {\n    auth: {\n      endpoint: process.env.SNS_AUTH_ENDPOINT,\n      accessKeyId: process.env.SNS_AUTH_ACCESS_KEY_ID,\n      secretAccessKey: process.env.SNS_AUTH_SECRET_ACCESS_KEY,\n      region: process.env.SNS_AUTH_REGION\n    },\n    topic: process.env.SNS_TOPIC,\n    topicArn: process.env.SNS_TOPIC_ARN\n  },\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"63c8ddc6137542fcd7ad7ab59776d5d83dbff7e1","contentHash":"74aa5341c690e897a6d8a49db7c22b1901015459fe7f62afddd58cf6fcc732e7"},"H:\\deviceAssignment\\src\\dependency\\util\\client\\s3.ts":{"path":"H:\\deviceAssignment\\src\\dependency\\util\\client\\s3.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":32}},"2":{"start":{"line":4,"column":18},"end":{"line":4,"column":36}},"3":{"start":{"line":5,"column":23},"end":{"line":9,"column":2}},"4":{"start":{"line":5,"column":110},"end":{"line":9,"column":2}},"5":{"start":{"line":10,"column":0},"end":{"line":10,"column":40}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":23},"end":{"line":5,"column":24}},"loc":{"start":{"line":5,"column":110},"end":{"line":9,"column":2}},"line":5}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1},"f":{"0":1},"b":{},"inputSourceMap":{"version":3,"file":"H:/deviceAssignment/src/dependency/util/client/s3.ts","sources":["H:/deviceAssignment/src/dependency/util/client/s3.ts"],"names":[],"mappings":";;;AAAA,qCAA4B;AAGrB,MAAM,cAAc,GAAG,CAAC,EAC3B,MAAM,EAAE,EACJ,EAAE,EAAE,EACA,IAAI,EAAE,EACF,WAAW,EACX,eAAe,EAClB,EACD,gBAAgB,GACnB,EACJ,EACgB,EAAM,EAAE,CAAC,IAAI,YAAE,CAAC;IACjC,WAAW;IACX,eAAe;IACf,gBAAgB;CACnB,CAAC,CAAA;AAdW,QAAA,cAAc,kBAczB","sourcesContent":["import { S3 } from 'aws-sdk'\nimport { type Config } from \"../../../config\";\n\nexport const createS3Client = ({\n    config: {\n        s3: {\n            auth: {\n                accessKeyId,\n                secretAccessKey\n            },\n            s3ForcePathStyle,\n        }\n    }\n}: { config: Config }): S3 => new S3({\n    accessKeyId,\n    secretAccessKey,\n    s3ForcePathStyle,\n})\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c43af885a9683d9f2ccd29675d6c1eb5b3dc348b","contentHash":"ebcaf427cedb4c99a08cec2cce34e0a08f2485ef2d30cbb96881b6e0290403bb"}}