{"H:\\deviceAssignment\\src\\service\\dynamo.ts":{"path":"H:\\deviceAssignment\\src\\service\\dynamo.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":40}},"2":{"start":{"line":4,"column":24},"end":{"line":13,"column":1}},"3":{"start":{"line":4,"column":54},"end":{"line":13,"column":1}},"4":{"start":{"line":5,"column":4},"end":{"line":11,"column":19}},"5":{"start":{"line":12,"column":4},"end":{"line":12,"column":16}},"6":{"start":{"line":14,"column":31},"end":{"line":14,"column":113}},"7":{"start":{"line":14,"column":62},"end":{"line":14,"column":112}},"8":{"start":{"line":15,"column":0},"end":{"line":15,"column":56}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":24},"end":{"line":4,"column":25}},"loc":{"start":{"line":4,"column":54},"end":{"line":13,"column":1}},"line":4},"1":{"name":"(anonymous_1)","decl":{"start":{"line":4,"column":54},"end":{"line":4,"column":55}},"loc":{"start":{"line":4,"column":81},"end":{"line":13,"column":1}},"line":4},"2":{"name":"(anonymous_2)","decl":{"start":{"line":14,"column":31},"end":{"line":14,"column":32}},"loc":{"start":{"line":14,"column":62},"end":{"line":14,"column":112}},"line":14}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1},"f":{"0":1,"1":1,"2":1},"b":{},"inputSourceMap":{"version":3,"file":"H:/deviceAssignment/src/service/dynamo.ts","sources":["H:/deviceAssignment/src/service/dynamo.ts"],"names":[],"mappings":";;;AAEA,MAAM,eAAe,GAAG,CAAC,EACrB,oBAAoB,EAC4B,EAAE,EAAE,CAAC,KAAK,EAAE,SAAiB,EAAE,IAAS,EAAE,EAAE;IAC5F,MAAM,oBAAoB;SACrB,GAAG,CAAC;QACD,sBAAsB,EAAE,OAAO;QAC/B,SAAS,EAAE,SAAS;QACpB,IAAI,EAAE,IAAI;KACb,CAAC;SACD,OAAO,EAAE,CAAA;IACd,OAAO,IAAI,CAAA;AACf,CAAC,CAAA;AAEM,MAAM,sBAAsB,GAAG,CAAC,EACnC,oBAAoB,EACyB,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,eAAe,CAAC,EAAE,oBAAoB,EAAE,CAAC,EAAE,CAAC,CAAA;AAF7F,QAAA,sBAAsB,0BAEuE","sourcesContent":["import { type DynamoDB } from \"aws-sdk\"\n\nconst createPutAction = ({\n    dynamoDocumentClient\n}: { dynamoDocumentClient: DynamoDB.DocumentClient }) => async (tableName: string, data: any) => {\n    await dynamoDocumentClient\n        .put({\n            ReturnConsumedCapacity: 'TOTAL',\n            TableName: tableName,\n            Item: data\n        })\n        .promise()\n    return data\n}\n\nexport const createAWSStorageClient = ({\n    dynamoDocumentClient\n}: {dynamoDocumentClient:DynamoDB.DocumentClient}) => ({ put: createPutAction({ dynamoDocumentClient }) })\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"df721a3a3538cc81396c87addc5d00c1e3769f7c","contentHash":"728356ee9ca808972bead82a56931ec7840955d054d032873ad710d8b541b033"}}